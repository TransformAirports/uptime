let devicesRef,devicesListener,deviceIntervals={};function loadFirebaseConfig(){return fetch("localFirebase.json").then(e=>e.json()).then(e=>(firebase.apps.length||firebase.initializeApp(e),e)).catch(e=>{throw console.error("Error loading Firebase config:",e),e})}const attachCardEventListeners=()=>{document.querySelectorAll(".device-card").forEach(e=>{e.addEventListener("click",e=>{const t=e.currentTarget.getAttribute("data-id"),n=e.currentTarget.getAttribute("data-type");showOutageLogs(t,n)})})},loadDevices=()=>{const e=firebase.database();devicesRef&&devicesListener&&devicesRef.off("value",devicesListener),devicesRef=e.ref("/devices"),devicesListener=devicesRef.on("value",e=>{const t=e.val(),n=document.getElementById("deviceAccordion");n.innerHTML="";const a={elevator:"Elevators",escalator:"Escalators",sidewalk:"Moving Sidewalks"},o={elevator:[],escalator:[],sidewalk:[]};for(let e in t)if(e=e.toLowerCase(),o[e])for(const n in t[e]){const a=t[e][n];o[e].push({type:e,deviceID:n,...a})}for(const e in o)if(o[e].length>0){o[e].sort((e,t)=>{const n=e=>e.monitored?e.power&&!e.alarm?0:1:2;return n(e)-n(t)});const t=document.createElement("div");t.classList.add("accordion-item"),t.setAttribute("data-type",e);const s=`heading-${e}`,r=`collapse-${e}`,i=!0,l=i?"show":"",c=o[e].filter(e=>e.monitored&&e.power&&!e.alarm).length,d=o[e].length;t.innerHTML=`\n            <h2 class="accordion-header" id="${s}">\n              <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#${r}" aria-expanded="${i}" aria-controls="${r}">\n                ${a[e]}<span class="lead"> (${c} of ${d} online)</span>\n              </button>\n            </h2>\n            <div id="${r}" class="accordion-collapse collapse ${l}" aria-labelledby="${s}" data-bs-parent="#deviceAccordion">\n              <div class="accordion-body">\n                <div class="row"></div>\n              </div>\n            </div>\n          `,n.appendChild(t);const m=t.querySelector(".row");o[e].forEach(t=>{const n=t.deviceID,a=t.monitored,o=a&&t.power&&!t.alarm?"online":"offline",s="online"===o?"Time Online":"Time Offline",r=t.lastStatusChangeTimestamp,i=t.last_statuscheck_timestamp,l=document.createElement("div");l.classList.add("device-card"),l.setAttribute("data-id",n),l.setAttribute("data-type",e);let c="";a&&(c=`\n                <p class="card-text extra-info">\n                  <small class="text-muted">Hours Uptime this Month:</small> <span id="uptime-hours-${n}">${t.currentMonthUptime?t.currentMonthUptime.uptimeHours:"N/A"}</span><br>\n                  <small class="text-muted">% Uptime this Month:</small> <span id="uptime-percentage-${n}">${t.currentMonthUptime?t.currentMonthUptime.uptimePercentage:"N/A"}%</span><br>\n                  <small class="text-muted" id="last-reading-${n}">Last sensor reading: ${new Date(1e3*i).toLocaleString()}</small>\n                </p>\n              `),l.innerHTML=`\n              <div class="card mb-3 ${"online"===o?"border-success":"border-danger"}">\n                <div class="card-body">\n                  <h4 class="card-title">${n}</h4>\n                  <p class="card-text small text-muted">${t.location||"Location unknown"}</p>\n                  <p class="card-text">\n                    <strong>Power:</strong> <span class="power-indicator" style="color: ${a?t.power?"green":"red":"grey"};"><i class="fas fa-circle"></i></span><br>\n                    <strong>Alarm:</strong> <span class="alarm-indicator" style="color: ${a?t.alarm?"red":"green":"grey"};"><i class="fas fa-circle"></i></span><br>\n                    <strong>${s}:</strong> <span id="timer-${n}">${a?"":"-"}</span>\n                  </p>\n                  ${c}\n                </div>\n              </div>\n            `,m.appendChild(l),a&&(deviceIntervals[n]&&clearInterval(deviceIntervals[n]),deviceIntervals[n]=setInterval(()=>{const e=Math.floor(Date.now()/1e3),a=e-r,o=Math.floor(a/86400),s=Math.floor(a%86400/3600),c=Math.floor(a%3600/60),d=a%60,m=l.querySelector(`#timer-${n}`);m&&(m.innerText=`${o}d ${s}h ${c}m ${d}s`);const u=l.querySelector(".power-indicator"),g=l.querySelector(".alarm-indicator");u.style.color=t.power?"green":"red",g.style.color=t.alarm?"red":"green";const p=l.querySelector(`#last-reading-${n}`);p&&(p.innerText=`Last sensor reading: ${new Date(1e3*i).toLocaleString()}`);const v=l.querySelector(".card");e-i>90?v.classList.add("sensor-offline-box"):v.classList.remove("sensor-offline-box")},1e3))})}attachCardEventListeners()},e=>{console.error("Error loading devices:",e),"PERMISSION_DENIED"===e.code&&showAlert("You do not have permission to access this data.","danger")})},showOutageLogs=(e,t)=>{const n=document.getElementById("outageLogList"),a=document.getElementById("modalDeviceID");n.innerHTML="",a.textContent=e;firebase.database().ref(`/outageLogs/${t}/${e}/outages`).limitToLast(10).once("value",e=>{const t=e.val();if(t)Object.entries(t).forEach(([e,t])=>{const a=new Date(1e3*t.start).toLocaleString(),o=t.end?new Date(1e3*t.end).toLocaleString():"Ongoing",s=t.end?t.end-t.start:Math.floor(Date.now()/1e3)-t.start,r=Math.floor(s/3600),i=Math.floor(s%3600/60),l=s%60,c=document.createElement("li");c.className="list-group-item",c.innerHTML=`<strong>Start:</strong> ${a} <br>\n                                <strong>End:</strong> ${o} <br>\n                                <strong>Duration:</strong> ${r}h ${i}m ${l}s`,n.appendChild(c)});else{const e=document.createElement("li");e.className="list-group-item",e.textContent="No recorded outages.",n.appendChild(e)}new bootstrap.Modal(document.getElementById("outageLogModal")).show()})};function showAlert(e,t="info"){const n=document.getElementById("alert-container"),a=document.createElement("div");a.className=`alert alert-${t} alert-dismissible fade show`,a.role="alert",a.innerHTML=`\n    ${e}\n    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n  `,n.appendChild(a),setTimeout(()=>{a.classList.remove("show"),a.classList.add("hide"),a.addEventListener("transitionend",()=>a.remove())},5e3)}document.addEventListener("DOMContentLoaded",function(){loadFirebaseConfig().then(()=>{console.log("Firebase config loaded and initialized."),loadDevices()}).catch(e=>{console.error("Failed to initialize Firebase:",e)})});